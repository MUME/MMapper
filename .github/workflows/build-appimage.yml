name: build-appimage

on:
  push:
    tags:
    - 'v*'
    branches:
    - master
  pull_request:
  workflow_dispatch:

jobs:
  build-appimage:
    runs-on: ubuntu-22.04
    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0
        submodules: true
    - name: Get Git tag description
      id: git_info
      run: |
        git tag -d beta 2>/dev/null || echo "Tag 'beta' not found"
        echo "GIT_TAG=$(git describe --tags --always --long)" >> $GITHUB_ENV

    - name: Install Build Dependencies
      run: |
        sudo apt update -qq
        sudo apt install -y \
          qt5-qmake qttools5-dev-tools libqt5opengl5-dev libqt5websockets5-dev \
          qt5keychain-dev libgl1-mesa-dev qtwayland5 build-essential mold git \
          zlib1g-dev libssl-dev wget zsync fuse file cmake

    - name: Download linuxdeploy
      run: |
        wget https://github.com/linuxdeploy/linuxdeploy/releases/download/continuous/linuxdeploy-x86_64.AppImage
        chmod +x linuxdeploy-x86_64.AppImage

    - name: Download linuxdeploy-plugin-qt
      run: |
        wget https://github.com/linuxdeploy/linuxdeploy-plugin-qt/releases/download/continuous/linuxdeploy-plugin-qt-x86_64.AppImage
        chmod +x linuxdeploy-plugin-qt-x86_64.AppImage

    - name: Build AppImage
      run: |
        mkdir -p build && cd build

        cmake .. \
          -DCMAKE_BUILD_TYPE=Release \
          -DCMAKE_INSTALL_PREFIX=/usr \
          -DUSE_MOLD=true \
          -DWITH_WEBSOCKET=ON \
          -DWITH_QTKEYCHAIN=ON \
          -DWITH_TESTS=OFF
        make -j$(getconf _NPROCESSORS_ONLN)
        make DESTDIR=appdir install

        # Extract version from CPackConfig.cmake
        export VERSION=$(grep -i "SET(CPACK_PACKAGE_VERSION " CPackConfig.cmake | cut -d\" -f 2)

        # Configure linuxdeploy and make sure the plugin can be found
        export PATH=$PATH:$(pwd)/..
        export UPDATE_INFORMATION="gh-releases-zsync|MUME|MMapper|latest|MMapper-*-x86_64.AppImage.zsync"
        export EXTRA_PLATFORM_PLUGINS="libqoffscreen.so;libqwayland-egl.so;libqwayland-generic.so"

        # Run linuxdeploy
        ../linuxdeploy-x86_64.AppImage --appdir appdir --output appimage \
          --executable appdir/usr/bin/mmapper \
          --desktop-file appdir/usr/share/applications/org.mume.MMapper.desktop \
          --icon-file appdir/usr/share/icons/hicolor/256x256/apps/org.mume.MMapper.png \
          --plugin qt

    - name: Generate SHA256 checksum for AppImage
      run: |
        sudo chown -R $USER:$USER build/
        mv build/*.AppImage* .
        export FILE=$(find . -type f -name MMapper*.AppImage | sed 's#./##')
        sha256sum $FILE > $FILE.sha256
        mkdir ${{ github.workspace }}/artifact
        mv MMapper*.AppImage* ${{ github.workspace }}/artifact

    - name: Get Linux package file base name
      id: get_linux_package_name
      run: |
        PACKAGE_FILE=$(ls ${{ github.workspace }}/artifact/*.AppImage)
        PACKAGE_BASENAME=$(basename "$PACKAGE_FILE" | sed 's/\./-/g')
        echo "PACKAGE_BASENAME=$PACKAGE_BASENAME" >> $GITHUB_OUTPUT

    - name: Upload AppImage
      uses: actions/upload-artifact@v4
      with:
        name: ${{ steps.get_linux_package_name.outputs.PACKAGE_BASENAME }}
        path: ${{ github.workspace }}/artifact/*.AppImage*
